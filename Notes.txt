Why not file system or why db?
1. Data inconsistency and Redundancy...
2. Concurrent data access problems...
3. Not possible to make data relationships b/w data...
4. Isolation problems(for example: file1.dat and file2.txt)...
5. Faster data access problems and manipulation problems with file system...

(Although all above can be done by writing programs for file system but instead of 
writing it for every file, we prefer centralized data management with the help of DBMS...)

DBMS basically provides abstracted view of the data to different users...

Three Schema Arcitecture(Provides personalised view of data to different users)...

1. Physical Schema - 
1.1 - Its a blueprint which tells how the data is stored in the disks or at the physical level...
1.2 - We must define algos which makes data access faster like storing the data in N-ary tree...

2. Conceptual/Logical Schema -
2.1 - Its a blueprint which tells what data are stored in DB and what relationships exist among data...
2.2 - Its independent from physical level...
2.3 - It also controls consistency constraints...
2.4 - Its goal is ease to use...

3. External/View Schema -
3.1 - It provides different view of the data or subschemas to different end users...
3.2 - It also provides security mechanism to provides data access to only authorized users...

Data Base Languages - 
1. DDL to specify db schema and also specify consistency constraints...
2. DML for retrieval, deletion, updation and insertion of data...

Database Application Architectures - 
1. In T1 architecture client, DB and DB server all reside on the same machine...
2. In T2 architecture client and server reside on different machines and communication is facilitated by JDBC or ODBC 
or some interface-> Has limited scalability when dealing with multiple clients and security issues are also there...
3. In T3 architecture client,server and db reside on different machines-> Data integrity is maintained and highly scalable...

Data Models - Visualization of relationships between different entities and attributes...

1. Each entity is uniquely identifiable...
2. Entity/Entity Set is a real world object...

E-R Model - It is the visualization of objects or entities and relationships between them...

Types of Attributes - Derived, Composite, multivalued, singleValued...

NULL Value - 
1. When a value is not assigned to an attribute -> May indicate inconsistency, deliberately leaving...

Strong Entity - It has independent existence and is identifiable by a primary key...
Weak Entity - It has dependency on Strong Entity and has no primary key...